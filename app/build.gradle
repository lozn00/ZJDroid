apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "25.0.2"
    //拦截编辑 因为找不到log类
/*         sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }*/
    defaultConfig {
        applicationId "com.android.reverse"
        minSdkVersion 15
        targetSdkVersion 15


        externalNativeBuild {
            cmake {
                cppFlags ""
//                cppFlags "-frtti -fexceptions"
            }

        }
        ndk {
            moduleName "dvmnative"
            abiFilters 'armeabi-v7a'
        }

        ndk {

            //APP的build.gradle设置支持的SO库架构

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    sourceSets {
        main {
            jni.srcDirs = ['src/main/jni']
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:22.+'
    compile 'com.google.guava:guava:17.0'
    compile files('libs/antlr-3.5.2-complete.jar')
    compile files('libs/commons-cli-1.2.jar')
    provided files('libs/XposedBridgeApi-54.jar')
}
//编译so
/*
//
task ndkBuild(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir')
    def myCommond = [
            "$ndkDir\\ndk-build", '-C', file('src/main/jni').absolutePath
    ]
    commandLine  myCommond
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}*/
